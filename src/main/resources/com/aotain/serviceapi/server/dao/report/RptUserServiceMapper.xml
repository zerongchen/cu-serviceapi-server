<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aotain.serviceapi.server.dao.report.RptUserServiceMapper">
  <resultMap id="BaseResultMap" type="com.aotain.cu.serviceapi.model.UserServiceInformation">
    <id column="SERVICEID" jdbcType="DECIMAL" property="serviceId" />
    <result column="USERID" jdbcType="DECIMAL" property="userId" />
    <result column="SERVICECONTENT" jdbcType="VARCHAR" property="serviceContent" />
    <result column="REGID" jdbcType="VARCHAR" property="registerId" />
    <result column="SETMODE" jdbcType="DECIMAL" property="setmode" />
    <result column="BUSINESS" jdbcType="DECIMAL" property="business" />
    <result column="REGTYPE" jdbcType="DECIMAL" property="regType" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USERID" jdbcType="DECIMAL" property="createUserId" />
    <result column="UPDATE_USERID" jdbcType="DECIMAL" property="updateUserId" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.aotain.cu.serviceapi.dto.UserServiceInformationDTO">
    <id column="SERVICEID" jdbcType="DECIMAL" property="serviceId" />
    <result column="USERID" jdbcType="DECIMAL" property="userId" />
    <result column="SERVICECONTENT" jdbcType="VARCHAR" property="serviceContent" />
    <result column="REGID" jdbcType="VARCHAR" property="registerId" />
    <result column="SETMODE" jdbcType="DECIMAL" property="setmode" />
    <result column="BUSINESS" jdbcType="DECIMAL" property="business" />
    <result column="REGTYPE" jdbcType="DECIMAL" property="regType" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USERID" jdbcType="DECIMAL" property="createUserId" />
    <result column="UPDATE_USERID" jdbcType="DECIMAL" property="updateUserId" />
    <result column="UNITNAME" jdbcType="VARCHAR" property="unitName" />
    <collection property="domainList" column="SERVICEID" select="getDomainList"></collection>
  </resultMap>

  <resultMap id="BaseDmoanResultMap" type="com.aotain.cu.serviceapi.model.ServiceDomainInformation">
    <id column="DOMAINID" jdbcType="DECIMAL" property="domainId" />
    <result column="SERVICEID" jdbcType="DECIMAL" property="serviceId" />
    <result column="DOMAINNAME" jdbcType="VARCHAR" property="domainName" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USERID" jdbcType="DECIMAL" property="createUserId" />
    <result column="UPDATE_USERID" jdbcType="DECIMAL" property="updateUserId" />
  </resultMap>

  <select id="getDomainList" parameterType="java.lang.Long" resultMap="BaseDmoanResultMap">
    select
    DOMAINID, SERVICEID, DOMAINNAME, CREATE_TIME, UPDATE_TIME, CREATE_USERID, UPDATE_USERID
    from RPT_ISMS_BASE_SERVICE_DOMAIN
    where SERVICEID = #{serviceId,jdbcType=DECIMAL}
  </select>
  <sql id="Base_Column_List">
    SERVICEID, USERID, SERVICECONTENT, REGID, SETMODE, BUSINESS, REGTYPE, CREATE_TIME, 
    UPDATE_TIME, CREATE_USERID, UPDATE_USERID
  </sql>
	
	
  <sql id="BASE_SERVICE_T1_COLUMN">t1.serviceid,t1.userid,t1.servicecontent,t1.regid,t1.setmode,t1.business,t2.unitname,
    t1.regtype,t1.create_time,t1.update_time,t1.create_userid,t1.update_userid</sql>
  
  <select id="getDtoList"  resultMap="BaseResultMap2" parameterType="com.aotain.cu.serviceapi.dto.UserServiceInformationDTO">
    select wm_concat(t3.domainname) domainName, <include refid="BASE_SERVICE_T1_COLUMN"></include> from rpt_isms_base_user_service t1
    left join rpt_isms_base_user t2 on t1.userid=t2.userid
    left join RPT_ISMS_BASE_SERVICE_DOMAIN t3 on t1.serviceid=t3.serviceid
    where 1=1
    <if test="userId != null">
        AND  t1.USERID = #{userId}
    </if>
    <if test="areaCodes != null and areaCodes != '' ">
       	AND split_areacode(t1.SUBORDINATEUNIT_AREACODE, #{areaCodes}) = 1
     </if>
    <!--
     <if test="authIdentities != null and authIdentities != '' ">
       	AND t1.USERID in ( 
       		select userid from rpt_isms_base_user where nature = 1 and split_areacode(IDENTIFY, #{authIdentities}) = 1
       	)
     </if>
     -->
    AND t1.USERID in (
      select userid from RPT_ISMS_BASE_USER usr
      where nature = 1
      <if test="authIdentities != null and authIdentities != '' ">
        and split_areacode(usr.IDENTIFY, #{authIdentities}) = 1
      </if>
      <if test="areaCodes != null and areaCodes != '' ">
        and split_areacode(usr.SUBORDINATEUNIT_AREACODE, #{areaCodes}) = 1
      </if>
    )
    <if test="unitName!=null and unitName!=''">
      AND  t2.unitname LIKE '%'||#{unitName}||'%'
    </if>
    <if test="domainName!=null and domainName!=''">
      AND  t3.domainname LIKE '%'||#{domainName}||'%'
    </if>
    <if test="business!=null">
      AND t1.BUSINESS = #{business}
    </if>
    <if test="setmode!=null">
      AND t1.setmode = #{setmode}
    </if>
    <if test="serviceContent!=null and serviceContent!=''">
      AND  t1.SERVICECONTENT LIKE '%'||#{serviceContent}||'%'
    </if>
    <if test="startDate!=null and startDate!=''">
      AND  #{startDate} &lt;= to_char(t1.UPDATE_TIME,'yyyy-mm-dd')
    </if>
    <if test="endDate!=null and endDate!=''">
      AND  #{endDate} &gt;= to_char(t1.UPDATE_TIME,'yyyy-mm-dd')
    </if>
    group by <include refid="BASE_SERVICE_T1_COLUMN"></include>
    ORDER  BY t1.UPDATE_TIME DESC
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from RPT_ISMS_BASE_USER_SERVICE
    where SERVICEID = #{serviceId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from RPT_ISMS_BASE_USER_SERVICE
    where SERVICEID = #{serviceId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.aotain.cu.serviceapi.model.UserServiceInformation">
    insert into RPT_ISMS_BASE_USER_SERVICE (SERVICEID, USERID, SERVICECONTENT, 
      REGID, SETMODE, BUSINESS, 
      REGTYPE, CREATE_TIME, UPDATE_TIME, 
      CREATE_USERID, UPDATE_USERID, SUBORDINATEUNIT_AREACODE)
    values (#{serviceId,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, #{serviceContent,jdbcType=VARCHAR},
      #{registerId,jdbcType=VARCHAR}, #{setmode,jdbcType=DECIMAL}, #{business,jdbcType=DECIMAL},
      #{regType,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=DECIMAL}, #{updateUserId,jdbcType=DECIMAL}, #{areaCode,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aotain.cu.serviceapi.model.UserServiceInformation">
    update RPT_ISMS_BASE_USER_SERVICE
    <set>
      <if test="userId != null">
        USERID = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="serviceContent != null">
        SERVICECONTENT = #{serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="registerId != null">
        REGID = #{registerId,jdbcType=VARCHAR},
      </if>
      <if test="setmode != null">
        SETMODE = #{setmode,jdbcType=DECIMAL},
      </if>
      <if test="business != null">
        BUSINESS = #{business,jdbcType=DECIMAL},
      </if>
      <if test="regType != null">
        REGTYPE = #{regType,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        CREATE_USERID = #{createUserId,jdbcType=DECIMAL},
      </if>
      <if test="updateUserId != null">
        UPDATE_USERID = #{updateUserId,jdbcType=DECIMAL},
      </if>
      <if test="areaCode != null">
        SUBORDINATEUNIT_AREACODE = #{areaCode,jdbcType=VARCHAR},
      </if>
    </set>
    where SERVICEID = #{serviceid,jdbcType=DECIMAL}
  </update>

  <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="false">
    INSERT INTO RPT_ISMS_BASE_USER_SERVICE (SERVICEID, USERID, SERVICECONTENT,
      REGID, SETMODE, BUSINESS,
      REGTYPE, CREATE_TIME, UPDATE_TIME,
      CREATE_USERID, UPDATE_USERID, SUBORDINATEUNIT_AREACODE)
    (
    <foreach collection="list" item="item" index="index" separator="union all">
      select
      #{item.serviceId,jdbcType=DECIMAL}, #{item.userId,jdbcType=DECIMAL},
      #{item.serviceContent,jdbcType=VARCHAR},
      #{item.registerId,jdbcType=VARCHAR}, #{item.setmode,jdbcType=DECIMAL}, #{item.business,jdbcType=DECIMAL},
      #{item.regType,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP},
      #{item.createUserId,jdbcType=DECIMAL}, #{item.updateUserId,jdbcType=DECIMAL}, #{item.areaCode,jdbcType=VARCHAR}
      from dual
    </foreach>)
  </insert>

  <select id="selectCountById" parameterType="com.aotain.cu.serviceapi.model.UserServiceInformation" resultType="java.lang.Integer">
    select count(1)  from RPT_ISMS_BASE_USER_SERVICE
    where SERVICEID = #{serviceId,jdbcType=DECIMAL}
  </select>

  <delete id="deleteByIds" parameterType="java.util.HashMap">
    delete from RPT_ISMS_BASE_USER_SERVICE
    where SERVICEID  in (
    <foreach collection="serviceIds" item="item" separator=",">
      #{item}
    </foreach>
    )
    AND USERID = #{userId}
  </delete>

  <update id="updateOrAdd" parameterType="java.util.List">
    MERGE INTO RPT_ISMS_BASE_USER_SERVICE t1 USING (
    <foreach collection="list" item="item" index="index" separator="union" >
      select
      #{item.serviceId,jdbcType=DECIMAL} serviceId,
      #{item.userId,jdbcType=DECIMAL} userId,
      #{item.serviceContent,jdbcType=VARCHAR} serviceContent,
      #{item.registerId,jdbcType=VARCHAR} registerId,
      #{item.setmode,jdbcType=DECIMAL} setmode,
      #{item.business,jdbcType=DECIMAL} business,
      #{item.regType,jdbcType=DECIMAL} regType,
      #{item.createTime,jdbcType=TIMESTAMP} createTime,
      #{item.updateTime,jdbcType=TIMESTAMP} updateTime,
      #{item.createUserId,jdbcType=DECIMAL} createUserId,
      #{item.updateUserId,jdbcType=DECIMAL} updateUserId,
      #{item.areaCode,jdbcType=VARCHAR} areaCode
      from dual
    </foreach>
    ) t2 ON ( t1.SERVICEID = t2.serviceId )
    WHEN MATCHED  THEN
    UPDATE
    <set>
      t1.USERID = t2.userId,
      t1.SERVICECONTENT = t2.serviceContent,
      t1.REGID = t2.registerId,
      t1.SETMODE = t2.setmode,
      t1.BUSINESS = t2.business,
      t1.REGTYPE = t2.regType,
      t1.CREATE_TIME = t2.createTime,
      t1.UPDATE_TIME = t2.updateTime,
      t1.CREATE_USERID = t2.createUserId,
      t1.UPDATE_USERID = t2.updateUserId,
      t1.SUBORDINATEUNIT_AREACODE = t2.areaCode
    </set>
    WHEN NOT MATCHED THEN
    INSERT (SERVICEID, USERID, SERVICECONTENT,
    REGID, SETMODE, BUSINESS,
    REGTYPE, CREATE_TIME, UPDATE_TIME,
    CREATE_USERID, UPDATE_USERID, SUBORDINATEUNIT_AREACODE)
    values (t2.serviceId,t2.userId,t2.serviceContent,t2.registerId,t2.setmode,
    t2.business,t2.regType,t2.createTime,t2.updateTime,t2.createUserId,
    t2.updateUserId, t2.areaCode)
  </update>

  <delete id="deleteByIdList" parameterType="java.util.List">
    DELETE FROM RPT_ISMS_BASE_USER_SERVICE
    WHERE SERVICEID in (
    <foreach collection="list" item="item" separator=",">
      #{item.serviceId}
    </foreach>
    )
  </delete>
</mapper>